{"version":3,"sources":["record-page.coffee","record-page.js"],"names":["app","behaviors","recordPage","desiredRecordType","properties","record","type","Object","notify","value","patient","hasLocalChanges","Boolean","genericNavigatedIn","params","this","domHost","getPageParams","_makeNewRecord","_loadRecord","_notifyInvalidRecord","_loadPatient","patientSerial","_notifyInvalidPatient","navigatedOut","_saveRecord","db","upsert","_this","arg","serial","showToast","_goBack","navigateToPreviousPage","arrowBackButtonPressed","e","showModalPrompt","answer","saveButtonPressed","patientIdentifier","list","find","length","showModalDialog","recordIdentifier","call"],"mappings":"CACA,WAAAA,IAAIC,UAAUC,YAEZC,kBAAmB,cAEnBC,YAEEC,QACEC,KAAMC,OACNC,QAAQ,EACRC,MAAO,MAETC,SACEJ,KAAMC,OACNC,QAAQ,EACRC,MAAO,MAETE,iBACEL,KAAMM,QACNH,OAAO,IAEXI,mBAAoB,SAACV,GAEnB,GAAAW,EAYA,IAZAC,KAACZ,kBAAoBA,EAErBW,EAASC,KAACC,QAAQC,gBAEfH,EAAO,OACe,QAApBA,EAAO,OACRC,KAACG,iBAEDH,KAACI,YAAYL,EAAO,QAEtBC,KAACK,uBAEAL,KAACV,OACF,MAAGS,GAAO,QACRC,KAACM,aAAaP,EAAO,SACfC,KAACV,OAAOiB,cACdP,KAACM,aAAaN,KAACV,OAAOiB,eAEtBP,KAACQ,yBAEPC,aAAc,WCCV,MDAFT,MAACV,OAAS,KACVU,KAACL,QAAU,MAEbe,YAAa,WCOT,MDNFzB,KAAI0B,GAAGC,OAAOZ,KAACZ,kBAAmBY,KAACV,OAAQ,SAAAuB,GCAvC,MDAuC,UAACC,GAAY,GAAAC,ECGlD,ODHuCA,GAADD,EAAAC,OAAYF,EAACvB,OAAOyB,SAAUA,IAA/Bf,OAC3CA,KAACC,QAAQe,UAAU,iBAErBC,QAAS,WCML,MDLFjB,MAACC,QAAQiB,0BAEXC,uBAAwB,SAACC,GACvB,MAAGpB,MAACJ,gBACFI,KAACC,QAAQoB,gBAAgB,kDAAmD,SAAAR,GCMxE,MDNwE,UAACS,GAC3E,GAAGA,ECOG,MDNJT,GAACI,YAFuEjB,OAI5EA,KAACiB,WAELM,kBAAmB,SAACH,GCYhB,MDXFpB,MAACU,cACDV,KAACJ,iBAAkB,GAErBU,aAAc,SAACkB,GACb,GAAAC,EACA,OADAA,GAAOxC,IAAI0B,GAAGe,KAAK,eAAgB,SAACZ,GAAY,GAAAC,ECc5C,ODdiCA,GAADD,EAAAC,OAAYA,IAAUS,IACxC,IAAfC,EAAKE,OACN3B,KAACL,QAAU8B,EAAK,GAEhBzB,KAACQ,yBAELA,sBAAuB,WCiBnB,MDhBFR,MAACC,QAAQ2B,gBAAgB,6BAE3BxB,YAAa,SAACyB,GACZ,GAAAJ,EACA,OADAA,GAAOxC,IAAI0B,GAAGe,KAAK1B,KAACZ,kBAAmB,SAAC0B,GAAY,GAAAC,ECoBhD,ODpBqCA,GAADD,EAAAC,OAAYA,IAAUc,IAC5C,IAAfJ,EAAKE,OACN3B,KAACV,OAASmC,EAAK,GAEfzB,KAACK,wBAELA,qBAAsB,WCuBlB,MDtBFL,MAACC,QAAQ2B,gBAAgB,+BC0B1BE,KAAK9B","file":"record-page.coffee-compiled.js","sourcesContent":["\napp.behaviors.recordPage = {\n\n  desiredRecordType: 'NOT DEFINED'\n \n  properties:\n\n    record:\n      type: Object\n      notify: true\n      value: null\n\n    patient:\n      type: Object\n      notify: true\n      value: null\n\n    hasLocalChanges: \n      type: Boolean\n      value: true\n\n  genericNavigatedIn: (desiredRecordType)->\n\n    @desiredRecordType = desiredRecordType\n\n    params = @domHost.getPageParams()\n\n    if params['record']\n      if params['record'] is 'new'\n        @_makeNewRecord()\n      else \n        @_loadRecord params['record']\n    else\n      @_notifyInvalidRecord()\n\n    if @record\n      if params['patient']\n        @_loadPatient params['patient']\n      else if @record.patientSerial\n        @_loadPatient @record.patientSerial\n      else\n        @_notifyInvalidPatient()\n\n  navigatedOut: ->\n    @record = null\n    @patient = null\n\n  _saveRecord: ->\n    app.db.upsert @desiredRecordType, @record, ({serial})=> @record.serial is serial\n    @domHost.showToast 'Record Saved'\n\n  _goBack: ->\n    @domHost.navigateToPreviousPage()\n\n  arrowBackButtonPressed: (e)->\n    if @hasLocalChanges\n      @domHost.showModalPrompt 'Are you sure? All unsaved changes will be lost.', (answer)=>\n        if answer\n          @_goBack()\n    else\n      @_goBack()\n\n  saveButtonPressed: (e)->\n    @_saveRecord()\n    @hasLocalChanges = false\n\n  _loadPatient: (patientIdentifier)->\n    list = app.db.find 'patient-list', ({serial})-> serial is patientIdentifier\n    if list.length is 1\n      @patient = list[0]\n    else\n      @_notifyInvalidPatient()\n\n  _notifyInvalidPatient: ->\n    @domHost.showModalDialog 'Invalid Patient Provided'\n\n  _loadRecord: (recordIdentifier)->\n    list = app.db.find @desiredRecordType, ({serial})-> serial is recordIdentifier\n    if list.length is 1\n      @record = list[0]\n    else\n      @_notifyInvalidRecord()\n\n  _notifyInvalidRecord: ->\n    @domHost.showModalDialog 'Invalid Record Provided'\n\n}","(function() {\n  app.behaviors.recordPage = {\n    desiredRecordType: 'NOT DEFINED',\n    properties: {\n      record: {\n        type: Object,\n        notify: true,\n        value: null\n      },\n      patient: {\n        type: Object,\n        notify: true,\n        value: null\n      },\n      hasLocalChanges: {\n        type: Boolean,\n        value: true\n      }\n    },\n    genericNavigatedIn: function(desiredRecordType) {\n      var params;\n      this.desiredRecordType = desiredRecordType;\n      params = this.domHost.getPageParams();\n      if (params['record']) {\n        if (params['record'] === 'new') {\n          this._makeNewRecord();\n        } else {\n          this._loadRecord(params['record']);\n        }\n      } else {\n        this._notifyInvalidRecord();\n      }\n      if (this.record) {\n        if (params['patient']) {\n          return this._loadPatient(params['patient']);\n        } else if (this.record.patientSerial) {\n          return this._loadPatient(this.record.patientSerial);\n        } else {\n          return this._notifyInvalidPatient();\n        }\n      }\n    },\n    navigatedOut: function() {\n      this.record = null;\n      return this.patient = null;\n    },\n    _saveRecord: function() {\n      app.db.upsert(this.desiredRecordType, this.record, (function(_this) {\n        return function(arg) {\n          var serial;\n          serial = arg.serial;\n          return _this.record.serial === serial;\n        };\n      })(this));\n      return this.domHost.showToast('Record Saved');\n    },\n    _goBack: function() {\n      return this.domHost.navigateToPreviousPage();\n    },\n    arrowBackButtonPressed: function(e) {\n      if (this.hasLocalChanges) {\n        return this.domHost.showModalPrompt('Are you sure? All unsaved changes will be lost.', (function(_this) {\n          return function(answer) {\n            if (answer) {\n              return _this._goBack();\n            }\n          };\n        })(this));\n      } else {\n        return this._goBack();\n      }\n    },\n    saveButtonPressed: function(e) {\n      this._saveRecord();\n      return this.hasLocalChanges = false;\n    },\n    _loadPatient: function(patientIdentifier) {\n      var list;\n      list = app.db.find('patient-list', function(arg) {\n        var serial;\n        serial = arg.serial;\n        return serial === patientIdentifier;\n      });\n      if (list.length === 1) {\n        return this.patient = list[0];\n      } else {\n        return this._notifyInvalidPatient();\n      }\n    },\n    _notifyInvalidPatient: function() {\n      return this.domHost.showModalDialog('Invalid Patient Provided');\n    },\n    _loadRecord: function(recordIdentifier) {\n      var list;\n      list = app.db.find(this.desiredRecordType, function(arg) {\n        var serial;\n        serial = arg.serial;\n        return serial === recordIdentifier;\n      });\n      if (list.length === 1) {\n        return this.record = list[0];\n      } else {\n        return this._notifyInvalidRecord();\n      }\n    },\n    _notifyInvalidRecord: function() {\n      return this.domHost.showModalDialog('Invalid Record Provided');\n    }\n  };\n\n}).call(this);\n"]}