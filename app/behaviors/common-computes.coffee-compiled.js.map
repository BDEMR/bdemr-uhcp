{"version":3,"sources":["common-computes.coffee","common-computes.js"],"names":["slice","indexOf","item","i","l","this","length","app","behaviors","commonComputes","$equals","left","right","$if","value","thenValue","elseValue","$iff","$sum","a","b","$and","$truncate","string","maxCount","substr","$mkDate","date","lib","datetime","mkDate","$mkDateTime","ms","now","format","Date","$mkTime","$in","list","arguments","call","$returnSerial","index","$isEmptyArray","data","$getFullName","first","honorifics","last","middle"],"mappings":"CACA,WAAA,GAAAA,MAAAA,MCCIC,KAAaA,SAAW,SAASC,GAAQ,IAAK,GAAIC,GAAI,EAAGC,EAAIC,KAAKC,OAAQH,EAAIC,EAAGD,IAAO,GAAIA,IAAKE,OAAQA,KAAKF,KAAOD,EAAM,MAAOC,EAAK,UDD3II,KAAIC,UAAUC,gBAEZC,QAAS,SAACC,EAAMC,GCGZ,MDHqBD,KAAQC,GAEjCC,IAAK,SAACC,EAAOC,EAAWC,GAAa,MAAGF,GAAWC,EAAeC,GAElEC,KAAM,SAACH,GCSH,MDTYA,IAEhBI,KAAM,SAACC,EAAEC,GCUL,MDVUD,GAAIC,GAElBC,KAAM,SAACF,EAAEC,GCWL,MDXUD,IAAMC,GAEpBE,UAAW,SAACC,EAAQC,GAClB,MAAiBD,GAAOjB,QAAUkB,EAA3BD,EACCA,EAAOE,OAAO,EAAID,EAAW,GAAM,OAE7CE,QAAS,SAACC,GCcN,MDdcC,KAAIC,SAASC,OAAOH,IAEtCI,YAAa,SAACC,GACZ,MAAgB,mBAANA,GACDJ,IAAIC,SAASI,MAEbL,IAAIC,SAASK,OAAY,GAAAC,MAAKH,GAAK,uBAE9CI,QAAS,SAACJ,GCgBN,MDhBYJ,KAAIC,SAASK,OAAY,GAAAC,MAAKH,GAAK,aAEnDK,IAAK,WACH,GAAAnC,GAAAoC,CCkBE,ODnBEpC,GAAAqC,UAAA,GAAMD,EAAA,GAAAC,UAAAjC,OAAAN,EAAAwC,KAAAD,UAAA,MACVtC,EAAAuC,KAAQF,EAARpC,IAAA,GAEFuC,cAAe,SAACC,GCmBZ,MDlBFA,GAAM,GAERC,cAAe,SAACC,GACd,MAAW,KAARA,GAKLC,aAAa,SAACD,GAEZ,GAAAE,GAAAC,EAAAC,EAAAC,CAAA,OAAkB,gBAARL,IACRG,EAAa,GACbD,EAAQ,GACRE,EAAO,GACPC,EAAS,GAENL,EAAKG,aACNA,EAAaH,EAAKG,WAAa,MAC9BH,EAAKE,QACNA,EAAQF,EAAKE,OACZF,EAAKK,SACNA,EAAS,IAAML,EAAKK,QACnBL,EAAKI,OACNA,EAAO,IAAMJ,EAAKI,MAEbD,EAAaD,EAAQG,EAASD,GAE3BJ,MC0BbJ,KAAKnC","file":"common-computes.coffee-compiled.js","sourcesContent":["\r\napp.behaviors.commonComputes = \r\n\r\n  $equals: (left, right)-> left is right\r\n\r\n  $if: (value, thenValue, elseValue)-> if value then thenValue else elseValue\r\n\r\n  $iff: (value)-> value\r\n\r\n  $sum: (a,b)-> a + b\r\n\r\n  $and: (a,b)-> a and b\r\n\r\n  $truncate: (string, maxCount)->\r\n    return string if string.length <= maxCount\r\n    return (string.substr 0, (maxCount - 3)) + '...'\r\n\r\n  $mkDate: (date)-> lib.datetime.mkDate date\r\n\r\n  $mkDateTime: (ms)->\r\n    if typeof ms is 'undefined'\r\n      return lib.datetime.now()\r\n    else\r\n      return lib.datetime.format((new Date ms), 'mmm d, yyyy h:MMTT')\r\n\r\n  $mkTime: (ms)-> lib.datetime.format((new Date ms), 'HH-MM-ss')\r\n\r\n  $in: (item, list...)->\r\n    item in list\r\n\r\n  $returnSerial: (index)->\r\n    index+1\r\n\r\n  $isEmptyArray: (data)->\r\n    if data is 0\r\n      return true\r\n    else\r\n      return false\r\n\r\n  $getFullName:(data)->\r\n\r\n    if typeof data is \"object\"\r\n      honorifics = ''\r\n      first = ''\r\n      last = ''\r\n      middle = ''\r\n\r\n      if data.honorifics  \r\n        honorifics = data.honorifics + \". \"\r\n      if data.first\r\n        first = data.first\r\n      if data.middle\r\n        middle = \" \" + data.middle\r\n      if data.last\r\n        last = \" \" + data.last\r\n        \r\n      return honorifics + first + middle + last\r\n\r\n    else return data","(function() {\n  var slice = [].slice,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  app.behaviors.commonComputes = {\n    $equals: function(left, right) {\n      return left === right;\n    },\n    $if: function(value, thenValue, elseValue) {\n      if (value) {\n        return thenValue;\n      } else {\n        return elseValue;\n      }\n    },\n    $iff: function(value) {\n      return value;\n    },\n    $sum: function(a, b) {\n      return a + b;\n    },\n    $and: function(a, b) {\n      return a && b;\n    },\n    $truncate: function(string, maxCount) {\n      if (string.length <= maxCount) {\n        return string;\n      }\n      return (string.substr(0, maxCount - 3)) + '...';\n    },\n    $mkDate: function(date) {\n      return lib.datetime.mkDate(date);\n    },\n    $mkDateTime: function(ms) {\n      if (typeof ms === 'undefined') {\n        return lib.datetime.now();\n      } else {\n        return lib.datetime.format(new Date(ms), 'mmm d, yyyy h:MMTT');\n      }\n    },\n    $mkTime: function(ms) {\n      return lib.datetime.format(new Date(ms), 'HH-MM-ss');\n    },\n    $in: function() {\n      var item, list;\n      item = arguments[0], list = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      return indexOf.call(list, item) >= 0;\n    },\n    $returnSerial: function(index) {\n      return index + 1;\n    },\n    $isEmptyArray: function(data) {\n      if (data === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    $getFullName: function(data) {\n      var first, honorifics, last, middle;\n      if (typeof data === \"object\") {\n        honorifics = '';\n        first = '';\n        last = '';\n        middle = '';\n        if (data.honorifics) {\n          honorifics = data.honorifics + \". \";\n        }\n        if (data.first) {\n          first = data.first;\n        }\n        if (data.middle) {\n          middle = \" \" + data.middle;\n        }\n        if (data.last) {\n          last = \" \" + data.last;\n        }\n        return honorifics + first + middle + last;\n      } else {\n        return data;\n      }\n    }\n  };\n\n}).call(this);\n"]}