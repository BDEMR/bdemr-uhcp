{"version":3,"sources":["common-computes.coffee","common-computes.js"],"names":["slice","indexOf","item","i","l","this","length","app","behaviors","commonComputes","$equals","left","right","$if","value","thenValue","elseValue","$iff","$sum","a","b","$and","$truncate","string","maxCount","substr","$mkDate","date","lib","datetime","mkDate","$compareFn","op","$mkDateTime","ms","now","format","Date","$mkTime","$formatDate","$formatDateTime","dateTime","$in","list","arguments","call","$returnSerial","index","$isEmptyArray","data","$getFullName","first","honorifics","last","middle","$makeNameObject","fullName","nameObject","namePart","partArray","trim","split","pop","join","shift","$getProfileImage","$checkUserAccess","accessId","currentOrganization","len","privilege","privilegeList","getCurrentOrganization","isCurrentUserAnAdmin","isCurrentUserAMember","userActiveRole","serial"],"mappings":"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","file":"common-computes.coffee-compiled.js","sourcesContent":["\r\napp.behaviors.commonComputes = \r\n\r\n  $equals: (left, right)-> left is right\r\n\r\n  $if: (value, thenValue, elseValue)-> if value then thenValue else elseValue\r\n\r\n  $iff: (value)-> value\r\n\r\n  $sum: (a,b)-> a + b\r\n\r\n  $and: (a,b)-> a and b\r\n\r\n  $truncate: (string, maxCount)->\r\n    return string if string.length <= maxCount\r\n    return (string.substr 0, (maxCount - 3)) + '...'\r\n\r\n  $mkDate: (date)-> \r\n    return '' unless date\r\n    lib.datetime.mkDate date\r\n\r\n\r\n  $compareFn: (left, op, right)->\r\n    if (op=='<')\r\n      return left < right\r\n    if (op=='>')\r\n      return left > right\r\n    if (op=='==')\r\n      return left == right\r\n    if (op=='>=')\r\n      return left >= right\r\n    if (op=='<=')\r\n      return left <= right\r\n\r\n  $mkDateTime: (ms)->\r\n    if typeof ms is 'undefined'\r\n      return lib.datetime.now()\r\n    else\r\n      return lib.datetime.format((new Date ms), 'mmm d, yyyy h:MMTT')\r\n\r\n  $mkTime: (ms)-> lib.datetime.format((new Date ms), 'HH-MM-ss')\r\n\r\n  $formatDate: (date)->\r\n    return '' unless date\r\n    lib.datetime.format((new Date date), 'mmm d, yyyy')\r\n  \r\n  $formatDateTime: (dateTime)->\r\n    return '' unless dateTime\r\n    lib.datetime.format((new Date dateTime), 'mmm d, yyyy h:MMTT')\r\n\r\n  $in: (item, list...)->\r\n    item in list\r\n\r\n  $returnSerial: (index)->\r\n    index+1\r\n\r\n  $isEmptyArray: (data)->\r\n    if data is 0\r\n      return true\r\n    else\r\n      return false\r\n\r\n  $getFullName:(data)->\r\n\r\n    if typeof data is \"object\"\r\n      honorifics = ''\r\n      first = ''\r\n      last = ''\r\n      middle = ''\r\n\r\n      if data.honorifics  \r\n        honorifics = data.honorifics + \". \"\r\n      if data.first\r\n        first = data.first\r\n      if data.middle\r\n        middle = \" \" + data.middle\r\n      if data.last\r\n        last = \" \" + data.last\r\n        \r\n      return honorifics + first + middle + last\r\n\r\n    else return data\r\n\r\n\r\n  $makeNameObject: (fullName)->\r\n\r\n    if typeof fullName is 'string'\r\n\r\n      fullName = fullName.trim()\r\n\r\n      partArray = fullName.split('.')\r\n\r\n      namePart = partArray.pop()\r\n\r\n      if partArray.length is 0 \r\n        honorifics = ''\r\n      else\r\n        honorifics = partArray.join('.').trim()\r\n\r\n      partArray = (namePart.trim()).split(' ')\r\n\r\n      nameObject = {}\r\n\r\n      if (partArray.length <= 1)\r\n        first = partArray[0]\r\n      else\r\n        first = partArray.shift()\r\n        last = partArray.pop()\r\n        middle = partArray.join(' ')\r\n\r\n        if middle is ''\r\n          middle = null\r\n        \r\n        if last is ''\r\n          last = null\r\n\r\n      if honorifics is ''\r\n        honorifics = null\r\n\r\n      nameObject.honorifics = honorifics\r\n      nameObject.first = first\r\n      nameObject.middle = middle\r\n      nameObject.last = last\r\n      return nameObject\r\n    else\r\n      return fullName\r\n\r\n\r\n  $getProfileImage: (data)->\r\n    if data\r\n      return data\r\n    else\r\n      return 'images/avatar.png'\r\n\r\n  $checkUserAccess: (accessId)->\r\n    currentOrganization = @getCurrentOrganization()\r\n\r\n    if accessId is 'none'\r\n      return true\r\n    else\r\n      if currentOrganization\r\n\r\n        if currentOrganization.isCurrentUserAnAdmin\r\n          return true\r\n        else if currentOrganization.isCurrentUserAMember\r\n          if currentOrganization.userActiveRole\r\n            privilegeList = currentOrganization.userActiveRole.privilegeList\r\n            unless privilegeList.length is 0\r\n              for privilege in privilegeList\r\n                if privilege.serial is accessId\r\n                  return true\r\n          else\r\n            return true\r\n\r\n          return false\r\n        else\r\n          return false\r\n\r\n      else\r\n        # @navigateToPage \"#/select-organization\"\r\n        return true\r\n      \r\n","(function() {\n  var slice = [].slice,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  app.behaviors.commonComputes = {\n    $equals: function(left, right) {\n      return left === right;\n    },\n    $if: function(value, thenValue, elseValue) {\n      if (value) {\n        return thenValue;\n      } else {\n        return elseValue;\n      }\n    },\n    $iff: function(value) {\n      return value;\n    },\n    $sum: function(a, b) {\n      return a + b;\n    },\n    $and: function(a, b) {\n      return a && b;\n    },\n    $truncate: function(string, maxCount) {\n      if (string.length <= maxCount) {\n        return string;\n      }\n      return (string.substr(0, maxCount - 3)) + '...';\n    },\n    $mkDate: function(date) {\n      if (!date) {\n        return '';\n      }\n      return lib.datetime.mkDate(date);\n    },\n    $compareFn: function(left, op, right) {\n      if (op === '<') {\n        return left < right;\n      }\n      if (op === '>') {\n        return left > right;\n      }\n      if (op === '==') {\n        return left === right;\n      }\n      if (op === '>=') {\n        return left >= right;\n      }\n      if (op === '<=') {\n        return left <= right;\n      }\n    },\n    $mkDateTime: function(ms) {\n      if (typeof ms === 'undefined') {\n        return lib.datetime.now();\n      } else {\n        return lib.datetime.format(new Date(ms), 'mmm d, yyyy h:MMTT');\n      }\n    },\n    $mkTime: function(ms) {\n      return lib.datetime.format(new Date(ms), 'HH-MM-ss');\n    },\n    $formatDate: function(date) {\n      if (!date) {\n        return '';\n      }\n      return lib.datetime.format(new Date(date), 'mmm d, yyyy');\n    },\n    $formatDateTime: function(dateTime) {\n      if (!dateTime) {\n        return '';\n      }\n      return lib.datetime.format(new Date(dateTime), 'mmm d, yyyy h:MMTT');\n    },\n    $in: function() {\n      var item, list;\n      item = arguments[0], list = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      return indexOf.call(list, item) >= 0;\n    },\n    $returnSerial: function(index) {\n      return index + 1;\n    },\n    $isEmptyArray: function(data) {\n      if (data === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    $getFullName: function(data) {\n      var first, honorifics, last, middle;\n      if (typeof data === \"object\") {\n        honorifics = '';\n        first = '';\n        last = '';\n        middle = '';\n        if (data.honorifics) {\n          honorifics = data.honorifics + \". \";\n        }\n        if (data.first) {\n          first = data.first;\n        }\n        if (data.middle) {\n          middle = \" \" + data.middle;\n        }\n        if (data.last) {\n          last = \" \" + data.last;\n        }\n        return honorifics + first + middle + last;\n      } else {\n        return data;\n      }\n    },\n    $makeNameObject: function(fullName) {\n      var first, honorifics, last, middle, nameObject, namePart, partArray;\n      if (typeof fullName === 'string') {\n        fullName = fullName.trim();\n        partArray = fullName.split('.');\n        namePart = partArray.pop();\n        if (partArray.length === 0) {\n          honorifics = '';\n        } else {\n          honorifics = partArray.join('.').trim();\n        }\n        partArray = (namePart.trim()).split(' ');\n        nameObject = {};\n        if (partArray.length <= 1) {\n          first = partArray[0];\n        } else {\n          first = partArray.shift();\n          last = partArray.pop();\n          middle = partArray.join(' ');\n          if (middle === '') {\n            middle = null;\n          }\n          if (last === '') {\n            last = null;\n          }\n        }\n        if (honorifics === '') {\n          honorifics = null;\n        }\n        nameObject.honorifics = honorifics;\n        nameObject.first = first;\n        nameObject.middle = middle;\n        nameObject.last = last;\n        return nameObject;\n      } else {\n        return fullName;\n      }\n    },\n    $getProfileImage: function(data) {\n      if (data) {\n        return data;\n      } else {\n        return 'images/avatar.png';\n      }\n    },\n    $checkUserAccess: function(accessId) {\n      var currentOrganization, i, len, privilege, privilegeList;\n      currentOrganization = this.getCurrentOrganization();\n      if (accessId === 'none') {\n        return true;\n      } else {\n        if (currentOrganization) {\n          if (currentOrganization.isCurrentUserAnAdmin) {\n            return true;\n          } else if (currentOrganization.isCurrentUserAMember) {\n            if (currentOrganization.userActiveRole) {\n              privilegeList = currentOrganization.userActiveRole.privilegeList;\n              if (privilegeList.length !== 0) {\n                for (i = 0, len = privilegeList.length; i < len; i++) {\n                  privilege = privilegeList[i];\n                  if (privilege.serial === accessId) {\n                    return true;\n                  }\n                }\n              }\n            } else {\n              return true;\n            }\n            return false;\n          } else {\n            return false;\n          }\n        } else {\n          return true;\n        }\n      }\n    }\n  };\n\n}).call(this);\n"]}