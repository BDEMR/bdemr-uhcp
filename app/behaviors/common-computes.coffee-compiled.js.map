{"version":3,"sources":["common-computes.coffee","common-computes.js"],"names":["slice","indexOf","item","i","l","this","length","app","behaviors","commonComputes","$equals","left","right","$if","value","thenValue","elseValue","$iff","$sum","a","b","$and","$truncate","string","maxCount","substr","$mkDate","date","lib","datetime","mkDate","$compareFn","op","$mkDateTime","Date","now","$mkTime","ms","format","$formatDate","formatObj","timeZone","day","month","year","toLocaleString","$formatDateTime","dateTime","hour","minute","$in","list","arguments","call","$returnSerial","index","$isEmptyArray","data","$toTwoDecimalPlace","number","isNaN","Number","parseFloat","toFixed","$getFullName","first","honorifics","last","middle","$makeNameObject","fullName","nameObject","namePart","partArray","trim","split","pop","join","shift","$getProfileImage","$checkUserAccess","accessId","currentOrganization","len","privilege","privilegeList","getCurrentOrganization","isCurrentUserAnAdmin","isCurrentUserAMember","userActiveRole","serial","$computeAge","dateString","age","birthDate","m","today","getFullYear","getMonth","getDate","$getPatientServiceBalance","patientId","cbfn","apiKey","user","callApi","_this","err","response","domHost","showModalDialog","hasError","showWarningToast","error","message","outdoorBalance","indoorBalance","window","sessionStorage","setItem"],"mappings":"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","file":"common-computes.coffee-compiled.js","sourcesContent":["\napp.behaviors.commonComputes = \n\n  $equals: (left, right)-> left is right\n\n  $if: (value, thenValue, elseValue)-> if value then thenValue else elseValue\n\n  $iff: (value)-> value\n\n  $sum: (a,b)-> a + b\n\n  $and: (a,b)-> a and b\n\n  $truncate: (string, maxCount)->\n    return string if string.length <= maxCount\n    return (string.substr 0, (maxCount - 3)) + '...'\n\n  $mkDate: (date)-> \n    return '' unless date\n    lib.datetime.mkDate date\n\n\n  $compareFn: (left, op, right)->\n    if (op=='<')\n      return left < right\n    if (op=='>')\n      return left > right\n    if (op=='==')\n      return left == right\n    if (op=='>=')\n      return left >= right\n    if (op=='<=')\n      return left <= right\n\n  $mkDateTime: ()-> Date.now()\n\n  $mkTime: (ms)-> lib.datetime.format((new Date ms), 'HH-MM-ss')\n\n  $formatDate: (date)->\n    return '' unless date\n    formatObj = { \n      timeZone: 'Asia/Dhaka' \n      day: 'numeric'\n      month: 'short'\n      year: 'numeric'\n    }\n    return new Date(date).toLocaleString('en-GB', formatObj)\n\n\n  $formatDateTime: (dateTime)->\n    return '' unless dateTime\n    formatObj = { \n      timeZone: 'Asia/Dhaka' \n      day: 'numeric'\n      month: 'short'\n      year: 'numeric'\n      hour: '2-digit'\n      minute: '2-digit'\n    }\n    # lib.datetime.format((new Date dateTime), 'mmm d, yyyy h:MMTT')\n    return new Date(dateTime).toLocaleString('en-IN', formatObj)\n\n  $in: (item, list...)->\n    item in list\n\n  $returnSerial: (index)->\n    index+1\n\n  $isEmptyArray: (data)->\n    if data is 0\n      return true\n    else\n      return false\n\n  $toTwoDecimalPlace: (number)-> \n    return if isNaN(number)\n    return Number.parseFloat(number).toFixed(2)\n\n  $getFullName:(data)->\n\n    if typeof data is \"object\"\n      honorifics = ''\n      first = ''\n      last = ''\n      middle = ''\n\n      if data.honorifics  \n        honorifics = data.honorifics + \". \"\n      if data.first\n        first = data.first\n      if data.middle\n        middle = \" \" + data.middle\n      if data.last\n        last = \" \" + data.last\n        \n      return honorifics + first + middle + last\n\n    else return data\n\n\n  $makeNameObject: (fullName)->\n\n    if typeof fullName is 'string'\n\n      fullName = fullName.trim()\n\n      partArray = fullName.split('.')\n\n      namePart = partArray.pop()\n\n      if partArray.length is 0 \n        honorifics = ''\n      else\n        honorifics = partArray.join('.').trim()\n\n      partArray = (namePart.trim()).split(' ')\n\n      nameObject = {}\n\n      if (partArray.length <= 1)\n        first = partArray[0]\n      else\n        first = partArray.shift()\n        last = partArray.pop()\n        middle = partArray.join(' ')\n\n        if middle is ''\n          middle = null\n        \n        if last is ''\n          last = null\n\n      if honorifics is ''\n        honorifics = null\n\n      nameObject.honorifics = honorifics\n      nameObject.first = first\n      nameObject.middle = middle\n      nameObject.last = last\n      return nameObject\n    else\n      return fullName\n\n\n  $getProfileImage: (data)->\n    if data\n      return data\n    else\n      return 'images/avatar.png'\n\n  $checkUserAccess: (accessId)->\n    currentOrganization = @getCurrentOrganization()\n\n    if accessId is 'none'\n      return true\n    else\n      if currentOrganization\n\n        if currentOrganization.isCurrentUserAnAdmin\n          return true\n        else if currentOrganization.isCurrentUserAMember\n          if currentOrganization.userActiveRole\n            privilegeList = currentOrganization.userActiveRole.privilegeList\n            unless privilegeList.length is 0\n              for privilege in privilegeList\n                if privilege.serial is accessId\n                  return true\n          else\n            return true\n\n          return false\n        else\n          return false\n\n      else\n        # @navigateToPage \"#/select-organization\"\n        return true\n\n  $computeAge: (dateString)->\n    return '' unless dateString\n    today = new Date()\n    birthDate = new Date dateString\n    age = today.getFullYear() - birthDate.getFullYear()\n    m = today.getMonth() - birthDate.getMonth()\n    if m < 0 || (m == 0 && today.getDate() < birthDate.getDate())\n      age--\n    return age\n      \n\n\n  $getPatientServiceBalance: (patientId, cbfn)->\n    data = {\n      patientId: patientId\n      apiKey: @user.apiKey\n    }\n    @callApi '/bdemr-uhcp--get-patient-service-value', data, (err, response)=>\n      if err  \n        @domHost.showModalDialog 'Could not connect to Server'\n      if response.hasError\n        @domHost.showWarningToast response.error.message\n        return cbfn {outdoorBalance:0, indoorBalance:0}\n      else\n        if response.data.length\n          window.sessionStorage.setItem 'wallet-balance', response.data[0].outdoorBalance\n          cbfn response.data[0]\n        else\n          cbfn {outdoorBalance:0, indoorBalance:0}\n","(function() {\n  var slice = [].slice,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  app.behaviors.commonComputes = {\n    $equals: function(left, right) {\n      return left === right;\n    },\n    $if: function(value, thenValue, elseValue) {\n      if (value) {\n        return thenValue;\n      } else {\n        return elseValue;\n      }\n    },\n    $iff: function(value) {\n      return value;\n    },\n    $sum: function(a, b) {\n      return a + b;\n    },\n    $and: function(a, b) {\n      return a && b;\n    },\n    $truncate: function(string, maxCount) {\n      if (string.length <= maxCount) {\n        return string;\n      }\n      return (string.substr(0, maxCount - 3)) + '...';\n    },\n    $mkDate: function(date) {\n      if (!date) {\n        return '';\n      }\n      return lib.datetime.mkDate(date);\n    },\n    $compareFn: function(left, op, right) {\n      if (op === '<') {\n        return left < right;\n      }\n      if (op === '>') {\n        return left > right;\n      }\n      if (op === '==') {\n        return left === right;\n      }\n      if (op === '>=') {\n        return left >= right;\n      }\n      if (op === '<=') {\n        return left <= right;\n      }\n    },\n    $mkDateTime: function() {\n      return Date.now();\n    },\n    $mkTime: function(ms) {\n      return lib.datetime.format(new Date(ms), 'HH-MM-ss');\n    },\n    $formatDate: function(date) {\n      var formatObj;\n      if (!date) {\n        return '';\n      }\n      formatObj = {\n        timeZone: 'Asia/Dhaka',\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      };\n      return new Date(date).toLocaleString('en-GB', formatObj);\n    },\n    $formatDateTime: function(dateTime) {\n      var formatObj;\n      if (!dateTime) {\n        return '';\n      }\n      formatObj = {\n        timeZone: 'Asia/Dhaka',\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      };\n      return new Date(dateTime).toLocaleString('en-IN', formatObj);\n    },\n    $in: function() {\n      var item, list;\n      item = arguments[0], list = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      return indexOf.call(list, item) >= 0;\n    },\n    $returnSerial: function(index) {\n      return index + 1;\n    },\n    $isEmptyArray: function(data) {\n      if (data === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    $toTwoDecimalPlace: function(number) {\n      if (isNaN(number)) {\n        return;\n      }\n      return Number.parseFloat(number).toFixed(2);\n    },\n    $getFullName: function(data) {\n      var first, honorifics, last, middle;\n      if (typeof data === \"object\") {\n        honorifics = '';\n        first = '';\n        last = '';\n        middle = '';\n        if (data.honorifics) {\n          honorifics = data.honorifics + \". \";\n        }\n        if (data.first) {\n          first = data.first;\n        }\n        if (data.middle) {\n          middle = \" \" + data.middle;\n        }\n        if (data.last) {\n          last = \" \" + data.last;\n        }\n        return honorifics + first + middle + last;\n      } else {\n        return data;\n      }\n    },\n    $makeNameObject: function(fullName) {\n      var first, honorifics, last, middle, nameObject, namePart, partArray;\n      if (typeof fullName === 'string') {\n        fullName = fullName.trim();\n        partArray = fullName.split('.');\n        namePart = partArray.pop();\n        if (partArray.length === 0) {\n          honorifics = '';\n        } else {\n          honorifics = partArray.join('.').trim();\n        }\n        partArray = (namePart.trim()).split(' ');\n        nameObject = {};\n        if (partArray.length <= 1) {\n          first = partArray[0];\n        } else {\n          first = partArray.shift();\n          last = partArray.pop();\n          middle = partArray.join(' ');\n          if (middle === '') {\n            middle = null;\n          }\n          if (last === '') {\n            last = null;\n          }\n        }\n        if (honorifics === '') {\n          honorifics = null;\n        }\n        nameObject.honorifics = honorifics;\n        nameObject.first = first;\n        nameObject.middle = middle;\n        nameObject.last = last;\n        return nameObject;\n      } else {\n        return fullName;\n      }\n    },\n    $getProfileImage: function(data) {\n      if (data) {\n        return data;\n      } else {\n        return 'images/avatar.png';\n      }\n    },\n    $checkUserAccess: function(accessId) {\n      var currentOrganization, i, len, privilege, privilegeList;\n      currentOrganization = this.getCurrentOrganization();\n      if (accessId === 'none') {\n        return true;\n      } else {\n        if (currentOrganization) {\n          if (currentOrganization.isCurrentUserAnAdmin) {\n            return true;\n          } else if (currentOrganization.isCurrentUserAMember) {\n            if (currentOrganization.userActiveRole) {\n              privilegeList = currentOrganization.userActiveRole.privilegeList;\n              if (privilegeList.length !== 0) {\n                for (i = 0, len = privilegeList.length; i < len; i++) {\n                  privilege = privilegeList[i];\n                  if (privilege.serial === accessId) {\n                    return true;\n                  }\n                }\n              }\n            } else {\n              return true;\n            }\n            return false;\n          } else {\n            return false;\n          }\n        } else {\n          return true;\n        }\n      }\n    },\n    $computeAge: function(dateString) {\n      var age, birthDate, m, today;\n      if (!dateString) {\n        return '';\n      }\n      today = new Date();\n      birthDate = new Date(dateString);\n      age = today.getFullYear() - birthDate.getFullYear();\n      m = today.getMonth() - birthDate.getMonth();\n      if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n        age--;\n      }\n      return age;\n    },\n    $getPatientServiceBalance: function(patientId, cbfn) {\n      var data;\n      data = {\n        patientId: patientId,\n        apiKey: this.user.apiKey\n      };\n      return this.callApi('/bdemr-uhcp--get-patient-service-value', data, (function(_this) {\n        return function(err, response) {\n          if (err) {\n            _this.domHost.showModalDialog('Could not connect to Server');\n          }\n          if (response.hasError) {\n            _this.domHost.showWarningToast(response.error.message);\n            return cbfn({\n              outdoorBalance: 0,\n              indoorBalance: 0\n            });\n          } else {\n            if (response.data.length) {\n              window.sessionStorage.setItem('wallet-balance', response.data[0].outdoorBalance);\n              return cbfn(response.data[0]);\n            } else {\n              return cbfn({\n                outdoorBalance: 0,\n                indoorBalance: 0\n              });\n            }\n          }\n        };\n      })(this));\n    }\n  };\n\n}).call(this);\n"]}